# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import os
import time
import pickle
from func import *
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def __init__(self):
        self.num_of_row = 0
        self.fname = ''

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(447, 359)
        MainWindow.setMinimumSize(QtCore.QSize(447, 359))
        MainWindow.setMaximumSize(QtCore.QSize(447, 359))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icon/icon.PNG"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.lb_ID = QtWidgets.QLabel(self.centralwidget)
        self.lb_ID.setGeometry(QtCore.QRect(20, 15, 56, 12))
        self.lb_ID.setObjectName("lb_ID")
        self.lb_PW = QtWidgets.QLabel(self.centralwidget)
        self.lb_PW.setGeometry(QtCore.QRect(10, 40, 56, 12))
        self.lb_PW.setObjectName("lb_PW")
        self.lb_Blogger = QtWidgets.QLabel(self.centralwidget)
        self.lb_Blogger.setGeometry(QtCore.QRect(10, 100, 121, 16))
        self.lb_Blogger.setObjectName("lb_Blogger")
        self.lb_Progress = QtWidgets.QLabel(self.centralwidget)
        self.lb_Progress.setGeometry(QtCore.QRect(11, 326, 51, 16))
        self.lb_Progress.setObjectName("lb_Progress")
        self.progressBar = QtWidgets.QProgressBar(self.centralwidget)
        self.progressBar.setGeometry(QtCore.QRect(60, 322, 371, 23))
        self.progressBar.setProperty("value", 24)
        self.progressBar.setObjectName("progressBar")
        self.progressBar.setValue(0)
        self.txtID = QtWidgets.QLineEdit(self.centralwidget)
        self.txtID.setGeometry(QtCore.QRect(70, 10, 113, 20))
        self.txtID.setMaxLength(20)
        self.txtID.setObjectName("txtID")
        self.txtPW = QtWidgets.QLineEdit(self.centralwidget)
        self.txtPW.setGeometry(QtCore.QRect(70, 35, 113, 20))
        self.txtPW.setMaxLength(20)
        self.txtPW.setEchoMode(QtWidgets.QLineEdit.Password)
        self.txtPW.setObjectName("txtPW")
        self.btnSave = QtWidgets.QPushButton(self.centralwidget)
        self.btnSave.setGeometry(QtCore.QRect(190, 9, 71, 48))
        self.btnSave.setObjectName("btnSave")
        self.btnLoad = QtWidgets.QPushButton(self.centralwidget)
        self.btnLoad.setGeometry(QtCore.QRect(284, 97, 75, 23))
        self.btnLoad.setObjectName("btnLoad")
        self.lb_POS = QtWidgets.QLabel(self.centralwidget)
        self.lb_POS.setGeometry(QtCore.QRect(310, 15, 261, 16))
        self.lb_POS.setObjectName("lb_POS")
        self.btnComment = QtWidgets.QPushButton(self.centralwidget)
        self.btnComment.setGeometry(QtCore.QRect(362, 97, 75, 23))
        self.btnComment.setObjectName("btnComment")
        self.lb_POS_1 = QtWidgets.QLabel(self.centralwidget)
        self.lb_POS_1.setGeometry(QtCore.QRect(310, 40, 56, 12))
        self.lb_POS_1.setObjectName("lb_POS_1")
        self.lb_POS_2 = QtWidgets.QLabel(self.centralwidget)
        self.lb_POS_2.setGeometry(QtCore.QRect(310, 65, 56, 12))
        self.lb_POS_2.setObjectName("lb_POS_2")
        self.txtPOS_1_X = QtWidgets.QLineEdit(self.centralwidget)
        self.txtPOS_1_X.setGeometry(QtCore.QRect(350, 36, 41, 20))
        self.txtPOS_1_X.setObjectName("txtPOS_1_X")
        self.txtPOS_1_Y = QtWidgets.QLineEdit(self.centralwidget)
        self.txtPOS_1_Y.setGeometry(QtCore.QRect(395, 36, 41, 20))
        self.txtPOS_1_Y.setObjectName("txtPOS_1_Y")
        self.txtPOS_2_X = QtWidgets.QLineEdit(self.centralwidget)
        self.txtPOS_2_X.setGeometry(QtCore.QRect(350, 62, 41, 20))
        self.txtPOS_2_X.setObjectName("txtPOS_2_X")
        self.txtPOS_2_Y = QtWidgets.QLineEdit(self.centralwidget)
        self.txtPOS_2_Y.setGeometry(QtCore.QRect(395, 62, 41, 20))
        self.txtPOS_2_Y.setObjectName("txtPOS_2_Y")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(10, 125, 426, 192))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(3)
        self.tableWidget.setRowCount(0)
        self.tableWidget.verticalHeader().setVisible(False)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        self.tableWidget.horizontalHeader().setDefaultSectionSize(120)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # 텍스트 채우기
        if os.path.isfile('./info.dll'):
            with open('./info.dll', mode='rb') as f:
                data = pickle.load(f)
                self.txtID.setText(data['id'])
                self.txtPW.setText(data['pw'])
                self.txtPOS_1_X.setText(str(data['pos_1'][0]))
                self.txtPOS_1_Y.setText(str(data['pos_1'][1]))
                self.txtPOS_2_X.setText(str(data['pos_2'][0]))
                self.txtPOS_2_Y.setText(str(data['pos_2'][1]))

        # 쓰레드 등록
        self.pos_thread = PosThread(self.centralwidget, self)
        self.comment_thread = CommentThread(self.centralwidget, self)

        # 이벤트, 시그널 등록
        self.btnSave.clicked.connect(self.clickSave)
        self.btnLoad.clicked.connect(self.clickLoad)
        self.btnComment.clicked.connect(self.clickComment)
        self.pos_thread.update_pos.connect(self.updatePos)
        self.comment_thread.update_comment.connect(self.updateComment)
        self.comment_thread.update_end.connect(self.updateEnd)
        self.comment_thread.update_progress.connect(self.progressBar.setValue)

        # 쓰레드 실행
        self.pos_thread.start()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "블로그 자동 댓글 프로그램"))
        self.lb_ID.setText(_translate("MainWindow", "아이디"))
        self.lb_PW.setText(_translate("MainWindow", "비밀번호"))
        self.lb_Blogger.setText(_translate("MainWindow", "블로거 리스트"))
        self.lb_Progress.setText(_translate("MainWindow", "진행도"))
        self.btnSave.setText(_translate("MainWindow", "저장"))
        self.btnLoad.setText(_translate("MainWindow", "불러오기"))
        self.lb_POS.setText(_translate("MainWindow", "좌표 설정 (X, Y)"))
        self.btnComment.setText(_translate("MainWindow", "댓글달기"))
        self.lb_POS_1.setText(_translate("MainWindow", "pos_1"))
        self.lb_POS_2.setText(_translate("MainWindow", "pos_2"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "아이디"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "댓글 가능 체크"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "작업 완료 여부"))

    # 버튼 이벤트
    # 저장 버튼 클릭
    def clickSave(self):
        with open('./info.dll', mode='wb') as f:
            data = {
                'id': self.txtID.text(),
                'pw': self.txtPW.text(),
                'pos_1': [int(self.txtPOS_1_X.text()), int(self.txtPOS_1_Y.text())],
                'pos_2': [int(self.txtPOS_2_X.text()), int(self.txtPOS_2_Y.text())]
            }
            pickle.dump(data, f)
        QtWidgets.QMessageBox.about(self.centralwidget, '저장 완료', '정보 저장 완료')

    # 불러오기 버튼 클릭
    def clickLoad(self):
        # 테이블 초기화
        self.clearTable()

        self.fname = QtWidgets.QFileDialog.getOpenFileName(self.centralwidget, '블로거 리스트 (Text File)', '', '텍스트 파일(*.txt)')

        # 파일을 올바르게 선택했다면, 테이블에 항목을 채움
        if self.fname[0]:
            try:
                with open(self.fname[0], mode='rt', encoding='utf-8') as f:
                    for line in f.read().splitlines():
                        self.tableWidget.insertRow(self.num_of_row)
                        self.tableWidget.setItem(self.num_of_row, 0, QtWidgets.QTableWidgetItem(line))
                        self.tableWidget.item(self.num_of_row, 0).setTextAlignment(QtCore.Qt.AlignCenter)
                        self.num_of_row = self.num_of_row + 1
            except:
                QtWidgets.QMessageBox.about(self.centralwidget, 'Warning', '파일이 올바르지 않습니다.')
                self.num_of_row = self.num_of_row + 1
                # 테이블 초기화
                self.clearTable()
                self.fname = ''
        else:
            QtWidgets.QMessageBox.about(self.centralwidget, 'Warning', '파일을 선택하지 않았습니다.')
            self.fname = ''

    # 댓글달기 버튼 클릭
    def clickComment(self):
        if self.num_of_row == 0:
            QtWidgets.QMessageBox.about(self.centralwidget, 'Warning', '리스트를 추가해주세요.')
        else:
            self.comment_thread.start()

    # 테이블 초기화
    def clearTable(self):
        temp = 0
        if temp < self.num_of_row:
            while temp < self.num_of_row:
                self.tableWidget.removeRow(self.num_of_row - 1)
                self.num_of_row = self.num_of_row - 1
            self.num_of_row = 0

    # 시그널
    # 마우스 좌표
    def updatePos(self, mouse_x, mouse_y):
        self.lb_POS.setText('좌표 설정 ({0}, {1})'.format(mouse_x, mouse_y))

    # 테이블 채우기
    def updateComment(self, idx, text):
        self.tableWidget.setItem(idx, 1, QtWidgets.QTableWidgetItem(text))
        self.tableWidget.item(idx, 1).setTextAlignment(QtCore.Qt.AlignCenter)

    def updateEnd(self, idx, text):
        self.tableWidget.setItem(idx, 2, QtWidgets.QTableWidgetItem(text))
        self.tableWidget.item(idx, 2).setTextAlignment(QtCore.Qt.AlignCenter)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
